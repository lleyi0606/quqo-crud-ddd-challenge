{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/categories": {
            "post": {
                "description": "Create a new category in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Add category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categoryentity.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid category_id format, Unable to parse form data, Unable to get Category from form",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application AddCategory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Get Category details by category_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get Category",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid category_id GetCategory",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetCategory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a category in the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "category updated",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid category_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application UpdatCategory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Category from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid category_id DeleteCategory",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application DeleteCategory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/categories/{id}/chain": {
            "get": {
                "description": "Get category details including all parent categories by category_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category chain",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get Category chain",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid category_id GetCategory",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetCategory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/customers": {
            "post": {
                "description": "Add an Customer to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Add customer",
                "parameters": [
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customerentity.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer created",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid customer_id format, Unable to parse form data, Unable to get Customer from form",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application AddCustomer error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "Get Customer details by customer_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get customers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get customers",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid customer_id GetCustomer",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetCustomer error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Customer in the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customerentity.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer updated",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid customer_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application UpdateCustomer error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a customer from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Delete customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid customer_id DeleteCustomer",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application DeleteCustomer error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/images": {
            "post": {
                "description": "Add an image to the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "Add image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Caption",
                        "name": "caption",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image_file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Image created",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID format, Unable to parse form data, Unable to get image from form",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application AddImage error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/images/{id}": {
            "get": {
                "description": "Get image details by image_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "Get image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get images",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid image_id GetImage",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetImage error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an image from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "Delete image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid image ID DeleteImage",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application DeleteImage error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/inventories/{id}": {
            "get": {
                "description": "Get inventory details by product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory details",
                        "schema": {
                            "$ref": "#/definitions/entity.Inventory"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID GetInventory",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetInventory error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update stock details for a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Update stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stock details to update",
                        "name": "Object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.InventoryStockOnly"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Stock updated",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID UpdateStock or Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application UpdateStock error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in with user credentials and obtain an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials for login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customerentity.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON provided",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Log out and invalidate the user token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/orderedItems": {
            "get": {
                "description": "Retrieve all ordered items from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ordered Item"
                ],
                "summary": "Retrieve all ordered items",
                "responses": {
                    "200": {
                        "description": "Ordered items getted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetOrderedItems error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/orderedItems/{id}": {
            "get": {
                "description": "Get OrderedItem details by Order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ordered Item"
                ],
                "summary": "Get orderedItems",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "OrderedItem ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get OrderedItemsByOrderId",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID GetOrderedItemsByOrderId",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetOrderedItemsByOrderId error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "Add an order to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Add order",
                "parameters": [
                    {
                        "description": "Order data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid order_id format, Unable to parse form data, Unable to get Order from form",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application AddOrder error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Get Order details by order_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get Order",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid order_id GetOrder",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetOrder error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an order in the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order updated",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid order_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application UpdateOrder error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Order from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid order_id DeleteOrder",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application DeleteOrder error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retrieve all products from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Retrieve all products",
                "responses": {
                    "200": {
                        "description": "Product getted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetProducts error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add multiple products to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Add products",
                "parameters": [
                    {
                        "description": "Array of products to add",
                        "name": "Object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ProductWithStockAndWarehouse"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Products added",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "422": {
                        "description": "Parse input error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/products/search": {
            "get": {
                "description": "Search for products by keyword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Search for products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword for product name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products searched",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application SearchProducts error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieve a product from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Retrieve a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application GetProduct error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a product in the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product updated",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application UpdateProduct error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product from the database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product_id",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    },
                    "500": {
                        "description": "Application DeleteProduct error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "categoryentity.Category": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "customerentity.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Inventory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "entity.InventoryStockOnly": {
            "type": "object",
            "properties": {
                "stock": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderInput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "ordered_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderedItemInput"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderedItemInput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.ProductWithStockAndWarehouse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}